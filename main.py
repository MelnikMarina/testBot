import sqlite3
import telebot
from telebot import types
from aiogram.types import InlineKeyboardButton, KeyboardButton, WebAppInfo, ReplyKeyboardMarkup
from datetime import datetime

id_seller = [6131680389,]
TOKEN = '6066868239:AAF6j0ELFVyuWa1khfDMCDLxiBghUMMxGt4' #@selmot_bot
bot = telebot.TeleBot(TOKEN)

global db
global sql

db = sqlite3.connect('TuttyFrutty.db', check_same_thread=False)
sql = db.cursor()

sql.execute("CREATE TABLE IF NOT EXISTS products (id INTEGER PRIMARY KEY AUTOINCREMENT,"
            "name TEXT, price BIGINT, count BIGINT, discount BIGINT DEFAULT 0,"
            "final_price BIGINT GENERATED ALWAYS AS (Price * (100 - Discount) / 100) STORED)") #–¢–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏

sql.execute("CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT,"
            "user_name TEXT, user_id BIGINT, balance BIGINT)") #–¢–∞–±–ª–∏—Ü–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

sql.execute("CREATE TABLE IF NOT EXISTS status (id INTEGER PRIMARY KEY AUTOINCREMENT,"
            "user_id BIGINT, order_id INT, order_status INT)")
            #0 - –∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, #1 - –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, #2 –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í—Å–µ —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç –ø—Ä–æ–¥–∞–≤–µ—Ü

sql.execute("CREATE TABLE IF NOT EXISTS cart (id INTEGER PRIMARY KEY AUTOINCREMENT,"
            "number_order, user_id BIGINT, id_product BIGINT, count BIGINT)") #–¢–∞–±–ª–∏—Ü–∞ —Å –∫–æ—Ä–∑–∏–Ω–∞–º–∏

@bot.message_handler(commands = ['start']) #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
def register(message):
    add_default_product_list()
    username = message.from_user.username; user_id = message.from_user.id; balance = 0
    sql.execute("SELECT user_id FROM users WHERE user_id = ?", (user_id,))
    if sql.fetchone() is None:
        sql.execute(
            f"INSERT INTO users (user_name, user_id, balance) VALUES ('{message.from_user.username}', '{message.from_user.id}', {0})")
            #–í—Å—Ç–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É. (–ù–∞–∑–≤–∞–Ω–∏–µ —è—á–µ–µ–∫) (–°–∞–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
        db.commit() #–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î
        bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω.')
        buttons(message)
    else:
        bot.send_message(message.chat.id, f'C –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω.')
        buttons(message)


def add_default_product_list():
    sql.execute("delete from products")
    sql.execute("delete from sqlite_sequence where name='products'")
    db.commit()
    sql.execute(
        f"INSERT INTO products (name, price, count, discount)"
        f"VALUES"
        f"('Red Printed T-shirt', {3000}, {5}, {0}),"
        f"('Black Sneakers', {5000}, {5}, {0}),"
        f"('Gym trousers', {2000}, {5}, {0}),"
        f"('Navy Puma Polo', {4000}, {5}, {0}),"
        f"('Air Jordan I', {10000}, {5}, {0}),"
        f"('Puma T-shirt', {5000}, {5}, {0}),"
        f"('3 Pair Socks Set', {1000}, {5}, {0}),"
        f"('Black Fossil Watch', {12000}, {5}, {0}),"
        f"('Leather Band Cassio Watch', {15000}, {5}, {0})"
    )
    db.commit()


def otzovikto(message): #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤
    text_for_otzyv = message.text
    if message.text:
        markup_inline = types.InlineKeyboardMarkup(row_width = 2)
        item_accept = types.InlineKeyboardButton(text = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É', callback_data = 'publish_otz')
        item_decline = types.InlineKeyboardButton(text = '–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data = 'decline_otz')
        markup_inline.add(item_accept, item_decline)
        bot.send_message(message.chat.id, f"{text_for_otzyv}", reply_markup = markup_inline)


@bot.message_handler(commands = ['otzyv']) #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /otzyv
def otzovik(message):
    msg = bot.send_message(message.chat.id, 'üìù –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤: ')
    bot.register_next_step_handler(msg, otzovikto)

@bot.message_handler(commands = ['menu']) #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu
def buttons(message):
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard = True) #–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    item_catalog = types.KeyboardButton(text = 'üìì –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤')
    item_profile = types.KeyboardButton(text = 'üë®üèª‚Äçüíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    markup_reply.add(item_catalog, item_profile) #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –º–µ–Ω—é:',
        reply_markup = markup_reply
    )

def webAppKeyboard(): #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å webapp –∫–Ω–æ–ø–∫–æ–π
   keyboard = types.ReplyKeyboardMarkup(row_width=1) #—Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
   webAppTest = types.WebAppInfo("https://melnikmarina.github.io/TwDB/") #—Å–æ–∑–¥–∞–µ–º webappinfo - —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è url
   one_butt = types.KeyboardButton(text="Selmot_shop", web_app=webAppTest) #—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
   keyboard.add(one_butt) #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

   return keyboard #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É


@bot.message_handler(content_types = ['text']) #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
def get_text(message):
    if message.text == 'üìì –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤':
        bot.send_message(message.chat.id, '–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–∞—Ç–∞–ª–æ–≥',reply_markup=webAppKeyboard())

    elif message.text == 'üîé –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞':
        bot.send_message(message.chat.id, f'–§—É–Ω–∫—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.') # –ú–∞—Ä–∏–Ω–∞

    elif message.text == 'üë®üèª‚Äçüíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
        markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
        —Åheck_balance = types.KeyboardButton(text = 'üíµ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        check_status = types.KeyboardButton(text='üí° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')
        go_back = types.KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑')
        delete = types.KeyboardButton(text='‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
        seller_menu = types.KeyboardButton(text='üíº –ó–∞–π—Ç–∏ –≤ –º–µ–Ω—é –ø—Ä–æ–¥–∞–≤—Ü–∞')
        markup_reply.add(—Åheck_balance, check_status, go_back, delete,seller_menu)
        bot.send_message(message.chat.id, '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:',
                         reply_markup=markup_reply
                         )

    elif message.text == 'üíµ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å':
        user_id = message.from_user.id
        sql.execute(f"SELECT balance FROM users WHERE user_id = {user_id}")
        result = sql.fetchone()
        if result: #–ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ –ë–î
            balance = result[0]
            bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} üí≥')
        else: #–ï—Å–ª–∏ –µ—ë –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º –¥—Ä—É–≥–æ–µ —É—Å–ª–æ–≤–∏–µ
            bot.send_message(message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #{message.from_user.id} –Ω–µ –Ω–∞–π–¥–µ–Ω')

    elif message.text == 'üí° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞':
        user_id = message.from_user.id
        now = datetime.now()
        datetime_str = now.strftime("%d.%m.%Y %H:%M")
        sql.execute(f"SELECT id, user_id, order_status FROM status WHERE user_id = {user_id}") #–í—ã–±–∏—Ä–∞–µ–º, —á—Ç–æ –¥–æ—Å—Ç–∞–µ–º. –í—ã–±–∏—Ä–∞–µ–º –æ—Ç–∫—É–¥–∞. –í—ã–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –æ—Ç–±–æ—Ä–∞
        results = sql.fetchall() #fetchall() –∑–∞–ø–∏—Å—ã–≤–∞–µ—à—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–±—Ä–∞–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É –≤ –ë–î
        order_list = ""
        if results:
            for result in results:
                id, user_id, order_status = result
                if order_status == 0:
                    order_list += f'\n–ó–∞–∫–∞–∑ #{id} —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω üìù –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è! \n'
                if order_status == 1:
                    order_list += f'\n–ó–∞–∫–∞–∑ #{id} –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º ‚úÖ –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è! \n'
                if order_status == 2:
                    order_list += f'\n–ó–∞–∫–∞–∑ #{id} –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º üì¶ –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ - /otzyv\n'
            bot.send_message(message.chat.id, f'{message.from_user.first_name}, —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ {datetime_str}: \n'
                                              f'\n{order_list}')
        else:
            bot.send_message(message.chat.id, f'{message.from_user.first_name}, —É –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ üò¶')

    elif message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑':
        user_id = message.from_user.id
        sql.execute(f"SELECT id, user_id, order_status FROM status WHERE user_id = {user_id}")
        result = sql.fetchone()
        if result is not None:
            id, user_id, order_status = result
            markup = types.InlineKeyboardMarkup() #–ö–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
            confirm = types.InlineKeyboardButton(text="–î–∞ ‚úî", callback_data=f"confirm_delete") #callback_data –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ callback_handler
            cancel = types.InlineKeyboardButton(text="–ù–µ—Ç ‚úñ", callback_data=f"cancel_delete")
            markup.add(confirm, cancel)
            bot.send_message(message.chat.id,
                             f'–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –∑–∞–∫–∞–∑—ã?',
                             reply_markup=markup)
            return id
        else:
            bot.send_message(message.chat.id,
                             f'{message.from_user.first_name}, —É –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ üò¶')

    elif message.text == '‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é':
        markup_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        item_catalog = types.KeyboardButton(text='üìì –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤')
        item_profile = types.KeyboardButton(text='üë®üèª‚Äçüíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
        markup_menu.add(item_catalog, item_profile)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:',
                         reply_markup = markup_menu)

    elif message.text == 'üíº –ó–∞–π—Ç–∏ –≤ –º–µ–Ω—é –ø—Ä–æ–¥–∞–≤—Ü–∞' or '/seller': #–ú–µ–Ω—é –ø—Ä–æ–¥–∞–≤—Ü–∞-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        user_id = message.from_user.id
        if user_id in id_seller:
            bot.send_message(message.chat.id, f'–§—É–Ω–∫—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.') #–ë–æ–≥–¥–∞–Ω
        else:
            bot.send_message(message.chat.id, f'–í –¥–æ—Å—Ç—É–ø–µ –æ—Ç–∫–∞–∑–∞–Ω–æ.')


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if call.data == "confirm_delete": #–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        user_id = call.message.chat.id
        sql.execute(f"DELETE FROM status WHERE user_id = {user_id}")
        db.commit()
        bot.send_message(call.message.chat.id, f'–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!')

    elif call.data == "cancel_delete": #–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        bot.send_message(call.message.chat.id, f'–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.')

    elif call.data == "confirm_cart":
        '''–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º. –î–∞–ª—å—à–µ –∏–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ö–≤–∞—Ç–∏—Ç –ª–∏ —É –Ω–µ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏.
        –ü–æ—Å–ª–µ —á–µ–≥–æ, –µ—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –±–æ—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–¥—Ä–µ—Å –∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞. –í —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç
        —É–¥–∞–ª—è–µ—Ç—Å—è –∫–æ—Ä–∑–∏–Ω–∞ –∏ –∑–∞–±–∏—Ä–∞—é—Ç—Å—è –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ "products" –∏ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –≤ "status". 
        –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–æ–¥–∞–≤—Ü—ã –ø–æ–ª—É—á–∞—é—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≤–µ—Ä—à–∏–ª –ø–æ–∫—É–ø–∫—É –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –µ–≥–æ –∑–∞–∫–∞–∑–∞.
        –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –¥–µ–Ω–µ–≥ –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–∫—É–ø–∫—É –∏ –µ–≥–æ –∫–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω—É–ª—è–µ—Ç—Å—è.'''
        user_id = call.message.chat.id
        sql.execute(f"SELECT balance FROM users WHERE user_id = {user_id}")
        balance = sql.fetchone()[0]
        final_sum = 0

        def change_balance(): #–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
            sql.execute(f"UPDATE users SET balance = balance - {final_sum} where user_id = {user_id}")
            db.commit()

        sql.execute(f"SELECT id_product, count FROM cart where user_id = {user_id}") #–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—Å–µ–π –∫–æ—Ä–∑–∏–Ω—ã
        rows = sql.fetchall()
        for row in rows:
            id_product, count = row
            sql.execute(f"SELECT final_price FROM products WHERE id = {id_product}")
            price = sql.fetchone()[0]
            final_sum += price*count

        def get_cart(message):  # –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä–∑–∏–Ω—ã —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∞–¥—Ä–µ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            address = message.text
            user_id = message.chat.id;
            user_name = message.chat.username
            sql.execute(f"SELECT number_order, id_product, count FROM cart where user_id = {user_id}")
            order_list = ""
            rows = sql.fetchall()
            for row in rows:
                number_order, id_product, count = row
                sql.execute(f"UPDATE products SET count = count - {count} where id = {id_product}")
                db.commit()
                sql.execute(f"SELECT name FROM PRODUCTS WHERE id = {id_product}")
                name_product = sql.fetchone()
                order_list += f'–¢–æ–≤–∞—Ä: "{name_product[0]}", –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {count}.\n'
            order_id = rows[0][0]
            sql.execute(f"INSERT INTO status (user_id, order_id, order_status) VALUES ('{user_id}', '{order_id}', {0})")
            db.commit()
            sql.execute(f"DELETE FROM cart WHERE user_id = {user_id}")
            db.commit()
            change_balance()
            bot.send_message(message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞–∫–∞–∑ #{order_id} üì¶')
            for id in id_seller:
                bot.send_message(id,
                                 f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_name} –æ—Ñ–æ—Ä–º–∏–ª –∑–∞–∫–∞–∑ #{order_id} üìß\n \n{order_list}\n'
                                 f'–ê–¥—Ä–µ—Å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: {address} üöõ\n–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {final_sum} üí≥')

        if final_sum <= balance: #–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
            address_new = bot.send_message(call.message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞):')
            bot.register_next_step_handler(address_new, get_cart)
        else:
            user_id = call.message.chat.id
            sql.execute(f"DELETE FROM cart WHERE user_id = {user_id}")
            db.commit()
            bot.send_message(call.message.chat.id, f'–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç {final_sum - balance}')



    elif call.data == "cancel_cart":
        user_id = call.message.chat.id
        sql.execute(f"DELETE FROM cart WHERE user_id = {user_id}")
        db.commit()
        bot.send_message(call.message.chat.id, f'–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∞.')

    elif call.data == "publish_otz":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                 text='‚úÖ –û—Ç–∑—ã–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!')
        for id in id_seller:
            bot.send_message(id, f'–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤: {call.message.text} üí¨')

    elif call.data == "decline_otz":
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '‚ùå –û—Ç–∑—ã–≤ –æ—Ç–∫–ª–æ–Ω—ë–Ω')

bot.polling(none_stop=True)



